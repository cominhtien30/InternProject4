{"version":3,"sources":["component/Main/popup/validation/index.js","component/Main/styles.js","component/Main/popup/formObject/index.js","component/Main/popup/popupAddEdit/popupFooter.js","component/Main/popup/popupAddEdit/popupHeader.js","randomId.js","component/Main/popup/popupAddEdit/popup.js","component/Main/popup/popupDelete/popupDelete.js","component/Main/header.js","component/Main/loading/loading.js","component/Main/alter/success.js","component/Main/index.js","actions/index.js","constant/index.js","data.js","reducers/goalPlan.js","reducers/loading.js","reducers/alert.js","reducers/index.js","sagas/index.js","App.js","reportWebVitals.js","index.js"],"names":["validateObject","GoalPlanName","DateFrom","DateTo","onVali","value","val","undefined","checkSpace","replace","onValidate","name","message","stylesPopup","createUseStyles","row","alignItems","display","width","justifyContent","color","fontSize","colInput","marginTop","flexDirection","minHeight","rowInput","form","overflow","stylesIndex","main","cursor","backgroundColor","height","visibility","Datagrid","margin","modal","btnAdd","marginLeft","PagingInfo","idRandom","GoalPlanID","Description","Priority","IsPermissionEditProportion","IsPermissionCancel","IsReview","EvaluationExpireDate","NumEvaluationLevel","IsCopyResult","LabelLevel1","LabelLevel2","LabelLevel3","IsApproved","ApprovalBeginDate","popupFooter","props","type","text","viewType","size","style","startIcon","onClick","submit","popupHeader","randomId","Math","random","toString","substr","FormPopup","listPlans","popupForm","closePopup","addPlan","updatePlan","detail","classes","useState","formObject","setForm","useEffect","checkDetail","Object","keys","length","console","log","validate","setvalidate","valiDefault","addPlanItem","closePopupAdd","editPlanItem","index","onChangeHandle","dragAnyWhere","darkTheme","open","onClose","className","required","error","onChange","e","target","placeholder","inputProps","maxLength","marginBottom","clearAble","displayFormat","label","returnFormat","disabled","actionIconAt","min","moment","format","defaultValue","onKeyUp","checked","marginRight","dataSource","id","displayExpr","itemMultipleSize","valueObjectDefault","parseInt","preventDefault","vali","forEach","k","valiWhenSubmit","values","filter","element","some","item","findIndexPlan","findIndex","DialogDelete","popupDelete","deleteTarget","comfirmDelete","timing","fullScreen","warningDescription","onCancel","onConfirm","pressESCToClose","header","setPopupForm","setTextNotify","defaultOpen","Loading","opacity","background","position","zIndex","top","right","left","bottom","success","notify","autoDisappear","horizontal","duration","vertical","mapDispatchToProps","getDatasRequest","actions","newPlan","connect","state","listTarget","goalPlan","loading","alertActive","alert","setPopupDelete","pageSize","setPageSize","pageCurrent","setPageCurrent","setDetail","renderMyCommand","data","setNotify","getDetail","handleDelete","stylesHeader","caption","fontWeight","border","rowAlternationEnabled","showBorders","showColumnLines","alignment","calculateCellValue","indexOf","headerCellRender","dataField","render","direction","defaultPageSize","pageIndex","mode","rowRenderingMode","fullWidth","listItemsPerPage","onChangePage","totalItems","onChangeItemsPerPage","submitForm","loadData","dataNew","Array","fill","push","initialState","myReducer","action","localStorage","getItem","setItem","JSON","stringify","parse","deletedPlan","combineReducers","rootSaga","CRUD","take","call","takeEvery","put","delay","sagaMiddleware","createSagaMiddleware","store","createStore","reducer","applyMiddleware","run","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74c0c2da.chunk.js","sourcesContent":["import { onValidate } from 'diginet-core-ui/utils';\r\n\r\n\r\nexport const validateObject={\r\n    GoalPlanName: true,\r\n    DateFrom: true,\r\n    DateTo: true,\r\n}\r\n\r\nexport const onVali = (value) =>\r\n{\r\n    \r\n    const val = value === undefined || value === null ? \"\" : value;\r\n  \r\n    let checkSpace = val.replace(/ /g, '') === \"\" ? \"\" : val;\r\n    \r\n   return onValidate(checkSpace, { name: \"required\", message: \"\" || null });\r\n\r\n}\r\n","import { createUseStyles } from 'react-jss'\r\n\r\nexport const stylesPopup = createUseStyles({\r\n    row: {\r\n        alignItems: 'flex-start',\r\n        display: 'flex',\r\n        width: \"100%\",\r\n        justifyContent: \"center\",\r\n        \"& .label\": {\r\n            color: \"#0095FF\",\r\n            fontSize: \"12px\"\r\n        }\r\n\r\n    },\r\n    colInput: {\r\n        marginTop: \"16.89px\",\r\n        display: 'flex',\r\n        width: \"100%\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\",\r\n        \"& .DGN-UI-Dropdown-Form\": {\r\n            minHeight: \"30px\"\r\n        }\r\n    },\r\n    rowInput: {\r\n        alignItems: 'center',\r\n        marginTop: \"18.89px\",\r\n        display: 'flex',\r\n        width: \"100%\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    form: {\r\n        overflow: \"auto\",\r\n        \"&::-webkit-scrollbar\": {\r\n            display: \"none\"\r\n        }\r\n    }\r\n\r\n})\r\n\r\nexport const stylesIndex = createUseStyles({\r\n    main: {\r\n        \"& svg\": {\r\n            cursor: \"pointer\"\r\n        },\r\n        \"& .dx-header-row\": {\r\n            backgroundColor: \"#F6F6F9\",\r\n            height: \"40px\"\r\n        },\r\n        \"& .dx-data-row \": {\r\n            height: \"40px\"\r\n        },\r\n        \"& .dx-page\": {\r\n            visibility: \"hidden\",\r\n\r\n        },\r\n        \"& .dx-pager\": {\r\n            display: \"none\"\r\n        }\r\n\r\n    },\r\n    Datagrid: {\r\n        // width: \"1784px\",\r\n        margin: \"64px 40px\"\r\n    },\r\n    modal: {\r\n        width: \"696px\", height: \"914px\"\r\n    },\r\n    btnAdd: {\r\n        marginLeft: \"17.83px\", height: \"70px\", width: \"89px\"\r\n    },\r\n    PagingInfo: {\r\n        marginTop: \"28.82px\"\r\n    }\r\n})\r\n"," const form=(idRandom)=>({\r\n    GoalPlanID: idRandom,\r\n    GoalPlanName: \"\",\r\n    DateFrom: \"\",\r\n    DateTo: \"\",\r\n    Description: \"\",\r\n    Priority: 1,\r\n    IsPermissionEditProportion: 0,\r\n    IsPermissionCancel: 0,\r\n    IsReview: 0,\r\n    EvaluationExpireDate: \"\",\r\n    NumEvaluationLevel: 1,\r\n    IsCopyResult: 0,\r\n    LabelLevel1: \"\",\r\n    LabelLevel2: \"\",\r\n    LabelLevel3: \"\",\r\n    IsApproved: 0,\r\n    ApprovalBeginDate: \"\"\r\n});\r\nexport default form;","import React from 'react';\r\nimport {ModalFooter ,Button} from 'diginet-core-ui/components';\r\n\r\nfunction popupFooter(props) {\r\n    return (<ModalFooter>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        color=\"info \"\r\n                        text=\"Lưu\"\r\n                        viewType=\"filled\"\r\n                        size=\"small\"\r\n                        style={{ marginLeft: \"17.83px\", height: \"40px\", width: \"89px\" }}\r\n                        startIcon=\"save\"\r\n                        onClick={props.submit}\r\n                    />\r\n        </ModalFooter>\r\n    );\r\n}\r\n\r\nexport default popupFooter;","import React from 'react';\r\nimport {ModalHeader } from 'diginet-core-ui/components';\r\n\r\nfunction popupHeader(props) {\r\n    return ( <ModalHeader>\r\n        Thông tin bảng mục tiêu\r\n    </ModalHeader>\r\n    );\r\n}\r\n\r\nexport default popupHeader;","const randomId = () => \"_\" + Math.random().toString(36).substr(2, 9);\r\nexport default randomId;\r\n","// @flow\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Label,\r\n  TextInput,\r\n  DatePicker,\r\n  NumberInput,\r\n  Toggle,\r\n  Dropdown,\r\n  Modal,\r\n  ModalBody\r\n} from \"diginet-core-ui/components\";\r\nimport { ArrowUp } from \"diginet-core-ui/icons\";\r\nimport { onVali, validateObject } from \"../validation\";\r\nimport { stylesPopup } from \"../../styles\";\r\nimport formObject from \"../formObject\";\r\nimport ModalFooter from \"./popupFooter\";\r\nimport ModalHeader from \"./popupHeader\";\r\nimport moment from \"moment\";\r\nimport randomId from \"../../../../randomId\";\r\n\r\nfunction FormPopup(props) {\r\n  //props\r\n  const {\r\n    listPlans,\r\n    popupForm,\r\n    closePopup,\r\n    addPlan,\r\n    updatePlan,\r\n    detail\r\n  } = props;\r\n  //randomId\r\n\r\n  //detail vatible\r\n  const classes = stylesPopup();\r\n  //form\r\n  const [form, setForm] = useState(formObject(randomId()));\r\n  //when set State\r\n  useEffect(() => {\r\n    const checkDetail = Object.keys(detail).length;\r\n    checkDetail > 0 ? setForm(detail) : setForm(formObject(randomId()));\r\n  }, [detail]);\r\n  //validation\r\n  console.log(form);\r\n  const [validate, setvalidate] = useState(validateObject);\r\n  const valiDefault = validate;\r\n  //submit form\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    let vali = {};\r\n    Object.keys(validate).forEach((k) => {\r\n      vali = { ...validate, ...vali, [k]: onVali(form[k]) };\r\n    });\r\n    setvalidate(vali);\r\n    // remove last item of validate.value and check all field = true\r\n    const valiWhenSubmit = Object.values(vali);\r\n    // find !=== true\r\n    const checkVali = valiWhenSubmit\r\n      .filter((element, index) => index < valiWhenSubmit.length - 1)\r\n      .some((item) => item !== true);\r\n    // check edit or add\r\n    if (checkVali === false) {\r\n      const findIndexPlan = listPlans.findIndex(\r\n        (item) => item.GoalPlanID === form.GoalPlanID\r\n      );\r\n      findIndexPlan === -1 ? addPlanItem() : editPlanItem(findIndexPlan);\r\n    }\r\n  };\r\n  //add handle\r\n  const addPlanItem = () => {\r\n    //when checkVali not exist !== true\r\n    closePopupAdd();\r\n    addPlan(form);\r\n  };\r\n  //edit handle\r\n  const editPlanItem = (index) => {\r\n    //when checkVali not exist !== true\r\n    closePopupAdd();\r\n    updatePlan(index, form);\r\n  };\r\n  const closePopupAdd = () => {\r\n    closePopup();\r\n    setvalidate(valiDefault);\r\n  };\r\n  // //when onChange Input\r\n  const onChangeHandle = (value, name) => {\r\n    setForm({ ...form, [name]: value });\r\n    switch (name) {\r\n      case \"GoalPlanName\":\r\n      case \"DateFrom\":\r\n      case \"DateTo\":\r\n        setvalidate({\r\n          ...validate,\r\n          [name]: onVali(value),\r\n          value: { ...validate.value, [name]: value }\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        style={{ width: \"696px\", height: \"914px\" }}\r\n        dragAnyWhere\r\n        darkTheme={false}\r\n        open={popupForm}\r\n        onClose={closePopupAdd}\r\n      >\r\n        <ModalHeader />\r\n        <ModalBody>\r\n          <div\r\n            className={classes.row}\r\n            style={{ marginTop: \"25.89px\", flexDirection: \"column \" }}\r\n          >\r\n            <div className={classes.colInput}>\r\n              <Label required>Tên Mục Tiên</Label>\r\n              <TextInput\r\n                value={\r\n                  form.GoalPlanName.replace(/ /g, \"\") === \"\"\r\n                    ? \"\"\r\n                    : form.GoalPlanName\r\n                }\r\n                error={\r\n                  validate.GoalPlanName === true ? \"\" : validate.GoalPlanName\r\n                }\r\n                onChange={(e) => onChangeHandle(e.target.value, \"GoalPlanName\")}\r\n                placeholder=\"Nhập\"\r\n                inputProps={{\r\n                  maxLength: 500\r\n                }}\r\n              />\r\n            </div>\r\n            <div className={classes.colInput}>\r\n              <Label>Mô tả</Label>\r\n              <TextInput\r\n                value={form.Description}\r\n                placeholder=\"Nhập\"\r\n                onChange={(e) => onChangeHandle(e.target.value, \"Description\")}\r\n                inputProps={{\r\n                  maxLength: 1000\r\n                }}\r\n              />\r\n            </div>\r\n            <div className={classes.rowInput}>\r\n              <div className={classes.colInput}>\r\n                <DatePicker\r\n                  value={form.DateFrom}\r\n                  error={validate.DateFrom === true ? \"\" : validate.DateFrom}\r\n                  style={{ marginBottom: \"0px\" }}\r\n                  clearAble\r\n                  displayFormat=\"DD/MM/YYYY\"\r\n                  label=\"Ngày bắt đầu\"\r\n                  placeholder=\"dd/MM/yyyy\"\r\n                  returnFormat=\"MM/DD/YYYY\"\r\n                  onChange={(e) => onChangeHandle(e.value, \"DateFrom\")}\r\n                />\r\n              </div>\r\n              <div className={classes.colInput} style={{ marginLeft: \"28px\" }}>\r\n                <DatePicker\r\n                  disabled={form.DateFrom === \"\" ? true : false}\r\n                  value={form.DateTo}\r\n                  error={validate.DateTo === true ? \"\" : validate.DateTo}\r\n                  style={{ marginBottom: \"0px\" }}\r\n                  actionIconAt=\"end\"\r\n                  clearAble\r\n                  min={moment(form.DateFrom).format(\"YYYY-MM-DD\")}\r\n                  //min=\"2021-06-18\"\r\n                  displayFormat=\"DD/MM/YYYY\"\r\n                  label=\"Ngày kết thúc\"\r\n                  placeholder=\"dd/MM/yyyy\"\r\n                  returnFormat=\"MM/DD/YYYY\"\r\n                  onChange={(e) => onChangeHandle(e.value, \"DateTo\")}\r\n                />\r\n              </div>\r\n              <div className={classes.colInput} style={{ marginLeft: \"28px\" }}>\r\n                <Label>Độ Ưu Tiên</Label>\r\n                <NumberInput\r\n                  value={form.Priority}\r\n                  defaultValue={1}\r\n                  style={{ margin: \"auto\" }}\r\n                  placeholder=\"Nhập\"\r\n                  onKeyUp={(e) => onChangeHandle(e.target.value, \"Priority\")}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className={classes.rowInput} style={{ width: \"50%\" }}>\r\n              <Label>Cho phép nhân viên sửa trọng số</Label>\r\n              <Toggle\r\n                checked={form.IsPermissionEditProportion === 1 ? true : false}\r\n                onChange={(e) =>\r\n                  onChangeHandle(\r\n                    e.target.checked ? 1 : 0,\r\n                    \"IsPermissionEditProportion\"\r\n                  )\r\n                }\r\n              />\r\n            </div>\r\n            <div className={classes.rowInput} style={{ width: \"50%\" }}>\r\n              <Label>Cho phép nhân viên hủy mục tiêu</Label>\r\n              <Toggle\r\n                checked={form.IsPermissionCancel === 1 ? true : false}\r\n                onChange={(e) =>\r\n                  onChangeHandle(e.target.checked ? 1 : 0, \"IsPermissionCancel\")\r\n                }\r\n              />\r\n            </div>\r\n            <div className={classes.rowInput} style={{ width: \"auto\" }}>\r\n              <ArrowUp />\r\n              <Label className=\"label\">Thông tin review</Label>\r\n            </div>\r\n            <div className={classes.rowInput} style={{ width: \"70%\" }}>\r\n              <div className={classes.rowInput} style={{ marginTop: \"0px\" }}>\r\n                <Label>Review mục tiêu</Label>\r\n                <div style={{ marginRight: \"28.48px\" }}>\r\n                  <Toggle\r\n                    checked={form.IsReview === 1 ? true : false}\r\n                    onChange={(e) =>\r\n                      onChangeHandle(e.target.checked ? 1 : 0, \"IsReview\")\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className={classes.colInput} style={{ marginTop: \"0px\" }}>\r\n                <DatePicker\r\n                  // returnFormat='DD/MM/YYYY'\r\n                  value={form.EvaluationExpireDate}\r\n                  style={{ marginBottom: \"0px\" }}\r\n                  clearAble\r\n                  disabled={form.IsReview === 1 ? false : true}\r\n                  label=\"Hạn review cuối\"\r\n                  placeholder=\"dd/MM/yyyy\"\r\n                  returnFormat=\"MM/DD/YYYY\"\r\n                  displayFormat=\"DD/MM/YYYY\"\r\n                  onChange={(e) =>\r\n                    onChangeHandle(e.value, \"EvaluationExpireDate\")\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className={classes.rowInput} style={{ width: \"85%\" }}>\r\n              <div className={classes.colInput}>\r\n                <Dropdown\r\n                  disabled={form.IsReview === 1 ? false : true}\r\n                  dataSource={[\r\n                    {\r\n                      id: \"1\",\r\n                      name: \"Item\"\r\n                    },\r\n                    {\r\n                      id: \"2\",\r\n                      name: \"Item\"\r\n                    },\r\n                    {\r\n                      id: \"3\",\r\n                      name: \"Item\"\r\n                    }\r\n                  ]}\r\n                  //renderItem={(data, index) => index + ' - ' + data.name}\r\n\r\n                  style={{ width: \"159px\" }}\r\n                  displayExpr=\"{id} - {name}\"\r\n                  label=\"Số cấp review\"\r\n                  placeholder=\"Text Dang Nhap\"\r\n                  viewType=\"outlined\"\r\n                  itemMultipleSize=\"small\"\r\n                  valueObjectDefault={{\r\n                    id: \"1\",\r\n                    name: \"Item\"\r\n                  }}\r\n                  value={form.NumEvaluationLevel.toString()}\r\n                  onChange={(e) =>\r\n                    onChangeHandle(e.value, \"NumEvaluationLevel\")\r\n                  }\r\n                />\r\n              </div>\r\n              <div className={classes.rowInput}>\r\n                <Label>Cho phép sap chép kết quả cấp trước</Label>\r\n                <div>\r\n                  <Toggle\r\n                    checked={form.IsCopyResult === 1 ? true : false}\r\n                    disabled={form.IsReview === 1 ? false : true}\r\n                    onChange={(e) =>\r\n                      onChangeHandle(e.target.checked ? 1 : 0, \"IsCopyResult\")\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={classes.colInput}>\r\n              <Label>Label cấp 1</Label>\r\n              <TextInput\r\n                value={form.LabelLevel1}\r\n                disabled={\r\n                  form.IsReview === 0 || parseInt(form.NumEvaluationLevel) !== 1\r\n                    ? true\r\n                    : false\r\n                }\r\n                placeholder=\"Nhập\"\r\n                inputProps={{\r\n                  maxLength: 250\r\n                }}\r\n                onChange={(e) => onChangeHandle(e.target.value, \"LabelLevel1\")}\r\n              />\r\n            </div>\r\n            <div className={classes.colInput}>\r\n              <Label>Label cấp 2</Label>\r\n              <TextInput\r\n                value={form.LabelLevel2}\r\n                disabled={\r\n                  form.IsReview === 0 || parseInt(form.NumEvaluationLevel) !== 2\r\n                    ? true\r\n                    : false\r\n                }\r\n                onChange={(e) => onChangeHandle(e.target.value, \"LabelLevel2\")}\r\n                placeholder=\"Nhập\"\r\n                inputProps={{\r\n                  maxLength: 250\r\n                }}\r\n              />\r\n            </div>\r\n            <div className={classes.colInput}>\r\n              <Label>Label cấp 3</Label>\r\n              <TextInput\r\n                value={form.LabelLevel3}\r\n                disabled={\r\n                  form.IsReview === 0 || parseInt(form.NumEvaluationLevel) !== 3\r\n                    ? true\r\n                    : false\r\n                }\r\n                onChange={(e) => onChangeHandle(e.target.value, \"LabelLevel3\")}\r\n                placeholder=\"Nhập\"\r\n                inputProps={{\r\n                  maxLength: 250\r\n                }}\r\n              />\r\n            </div>\r\n            <div className={classes.rowInput} style={{ width: \"auto\" }}>\r\n              <ArrowUp />\r\n              <Label className=\"label\">Thông tin xét duyệt</Label>\r\n            </div>\r\n            <div className={classes.rowInput}>\r\n              <div className={classes.rowInput} style={{ marginTop: \"0px\" }}>\r\n                <Label>Xem xét duyệt bảng mục tiêu</Label>\r\n                <div style={{ marginRight: \"28.48px\" }}>\r\n                  <Toggle\r\n                    checked={form.IsApproved === 1 ? true : false}\r\n                    onChange={(e) =>\r\n                      onChangeHandle(e.target.checked ? 1 : 0, \"IsApproved\")\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className={classes.colInput} style={{ marginTop: \"0px\" }}>\r\n                <DatePicker\r\n                  value={form.ApprovalBeginDate}\r\n                  returnFormat=\"MM/DD/YYYY\"\r\n                  style={{ marginBottom: \"0px\" }}\r\n                  clearAble\r\n                  label=\"Ngày bắt đầu xét duyệt\"\r\n                  placeholder=\"DDDD, dd/MMMM/yyyy\"\r\n                  displayFormat=\"DD/MM/YYYY\"\r\n                  onChange={(e) => onChangeHandle(e.value, \"ApprovalBeginDate\")}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter submit={submit} />\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\nexport default FormPopup;\r\n","// @flow\r\nimport * as React from 'react';\r\nimport { DangerPopup } from 'diginet-core-ui/components';\r\n\r\nexport default function DialogDelete(props)\r\n{\r\n  const { popupDelete, deleteTarget,closePopup } = props;\r\n  const {id} = popupDelete;\r\n\r\n  const comfirmDelete = () =>\r\n  {\r\n   \r\n    deleteTarget(id);\r\n    closePopup();\r\n  }\r\n\r\n  return <> <DangerPopup\r\n    open={popupDelete.open}\r\n    timing={3}\r\n    fullScreen\r\n    warningDescription={`Bạn Có Chắc Xóa Target ${id} Này`}\r\n    onClose={closePopup}\r\n    onCancel={comfirmDelete}\r\n    onConfirm={comfirmDelete}\r\n    pressESCToClose\r\n  /></>\r\n}\r\n","import React from 'react';\r\nimport { Button} from 'diginet-core-ui/components';\r\n\r\nfunction header(props) {\r\n    const clickAddHandle=()=>{\r\n        props.setPopupForm();\r\n        props.setTextNotify(\"Thêm\");\r\n        \r\n    }\r\n    return (\r\n        <div style={{ display: \"flex\", margin: \"0 41.17px\", alignItems: \"center\", justifyContent: \"flex-start\" }}>\r\n        <h4 style={{ color: \"#151A30\" }}>DANH SÁCH BẢNG MỤC TIÊU</h4>\r\n        <Button\r\n            color=\"primary\"\r\n            text=\"Thêm\"\r\n            viewType=\"filled\"\r\n            size=\"small\"\r\n            style={{ marginLeft: \"17.83px\", height: \"40px\", width: \"114px\" }}\r\n            startIcon=\"add\"\r\n            onClick={clickAddHandle}\r\n            defaultOpen={false}\r\n        />\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default header;","// @flow\r\nimport * as React from 'react';\r\nimport { CircularProgress } from 'diginet-core-ui/components';\r\n\r\nexport default function Loading(props)\r\n{\r\n\r\n  return <div \r\n  style={{opacity:\"0.7\",background:\"white\",position:\"fixed\",zIndex:\"999999\",width:\"100%\",height:\"100%\"}}>\r\n  <CircularProgress  color=\"#123f5f\" style={{position:\"fixed\",margin:\"auto\",top:0,right:0,left:0,bottom:0}} size=\"md\" />\r\n  </div>\r\n}\r\n","import React from 'react';\r\nimport { Alert  } from 'diginet-core-ui/components';\r\n\r\nconst success = (props) => {\r\n    const {notify}=props;\r\n    return (\r\n        <>\r\n             <Alert\r\n                size='medium'\r\n                style={{width:\"50%\",margin:\"auto\"}}\r\n                color=\"success\"\r\n                autoDisappear\r\n                horizontal=\"center\"\r\n                duration={5}\r\n                onClose={function noRefCheck(){}}\r\n                text={`${notify} thành công`}\r\n                vertical=\"bottom\"\r\n      />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default success;\r\n","// @flow\r\nimport * as actions from \"../../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport Form from \"./popup/popupAddEdit/popup\";\r\nimport DialogDelete from \"./popup/popupDelete/popupDelete\";\r\nimport { Divider, PagingInfo } from 'diginet-core-ui/components';\r\nimport 'devextreme/dist/css/dx.light.css';\r\nimport { Edit, Delete } from 'diginet-core-ui/icons';\r\nimport { stylesIndex } from \"./styles\"\r\nimport Header from \"./header\";\r\nimport Loading from \"./loading/loading\"\r\nimport Alert from \"./alter/success\"\r\nimport\r\n{\r\n    DataGrid, Button as ButtonIcon, Column,\r\n    Paging, Scrolling\r\n} from 'devextreme-react/data-grid';\r\n\r\nfunction Index(props)\r\n{\r\n    const { getDatasRequest, loading, listTarget ,alertActive} = props;\r\n    console.log(alertActive)\r\n   \r\n    //request data\r\n    useEffect(() =>\r\n    {\r\n        getDatasRequest();\r\n    }, [getDatasRequest]);\r\n    const classes = stylesIndex();\r\n    const [popupForm, setPopupForm] = useState(false);\r\n    const [popupDelete, setPopupDelete] = useState({ open: false, id: \"\" });\r\n    //state page\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [pageCurrent, setPageCurrent] = useState(0);\r\n    //detail\r\n    const [detail, setDetail] = useState({});\r\n    const openPopup=()=>{\r\n        setPopupForm(true)\r\n    }\r\n    const closePopup = () =>\r\n    {\r\n        setDetail({});\r\n        setPopupForm(false);\r\n        setPopupDelete({ open: false, id: \"\" });\r\n    }\r\n \r\n    //get detail\r\n    const getDetail = (GoalPlanID) =>\r\n    {\r\n        //set Text notify\r\n        setNotify(`Cập Nhật ID: ${GoalPlanID}`);\r\n        //lay id\r\n        //loc array theo id\r\n        const detail = listTarget.filter(item => item.GoalPlanID === GoalPlanID);\r\n        setPopupForm(true);\r\n        //set vao state detail\r\n        setDetail(detail[0])\r\n    }\r\n    //handle delete\r\n    const handleDelete=(GoalPlanID)=>{\r\n        setNotify(`Đã Xóa ID : ${GoalPlanID}`);\r\n        setPopupDelete({ open: true, id: GoalPlanID });\r\n    }\r\n    const renderMyCommand = (e, index) =>\r\n    {\r\n        const { GoalPlanID } = e.row.data;;\r\n        return index === 1\r\n            ? <div style={{ display: \"inline\" }} onClick={() => getDetail(GoalPlanID)}><Edit /></div>\r\n            : <div style={{ display: \"inline\" }} onClick={()=>handleDelete(GoalPlanID)}><Delete /></div>;\r\n    };\r\n    const rowIndex = (e) =>\r\n    {\r\n        return props.listTarget.indexOf(e);\r\n    }\r\n    const renderDateHandle = (data) =>\r\n    {\r\n\r\n        return data.DateFrom === null ? \"\" : data.DateFrom + \" - \" + data.DateTo\r\n    }\r\n    ///notify alert\r\n    const [notify,setNotify]=useState(\"\");\r\n    const setTextNotify=(text)=>{\r\n        setNotify(text);\r\n    }\r\n    const stylesHeader = (caption) => (<span style={{ fontSize: 13, color: \"black\", fontWeight: \"bold\", marginBottom: \"40px\" }}>{caption}</span>)\r\n    return <div className={classes.main}>\r\n        {loading ? <Loading /> : \"\"}\r\n        <div\r\n            //  width=\"1864px\" height=\"501px\"\r\n\r\n            style={{ margin: \"auto\", border: \"none\" }} >\r\n            <Header setPopupForm={openPopup} setTextNotify={setTextNotify} />\r\n            <Divider />\r\n            <div className={classes.Datagrid}>\r\n\r\n                <DataGrid\r\n                    height={245}\r\n                    rowAlternationEnabled={true}\r\n                    dataSource={listTarget}\r\n                    showBorders={false}\r\n                    showColumnLines={false}\r\n                //onValidate(e.target.value, {name: \"required\", message: \"\" || null})\r\n                >\r\n                    <Column alignment=\"left\" calculateCellValue={rowIndex} width={50} headerCellRender={() => stylesHeader(\"STT\")} />\r\n                    <Column alignment=\"left\" caption=\"Name\" width={200} dataField=\"GoalPlanName\" headerCellRender={() => stylesHeader(\"TÊN HẠNG MỤC TIÊU BIỂU\")} />\r\n                    <Column alignment=\"left\" width={400} dataField=\"Description\" headerCellRender={() => stylesHeader(\"MÔ TẢ\")} />\r\n                    <Column alignment=\"left\" width={200} calculateCellValue={renderDateHandle} headerCellRender={() => stylesHeader(\"KHOẢNG THỜI GIAN\")} />\r\n                    <Column alignment=\"left\" width={200} dataField=\"Priority\" headerCellRender={() => stylesHeader(\"ĐỘ ƯU TIÊN\")} />\r\n                    <Column alignment=\"left\" width={600} type=\"buttons\" >\r\n                        <ButtonIcon\r\n                            render={(e) => renderMyCommand(e, 1)}\r\n                        />\r\n                        <Divider direction=\"vertical\" />\r\n                        <ButtonIcon\r\n                            render={(e) => renderMyCommand(e, 2)}\r\n                        />\r\n                    </Column>\r\n                    {/* <Pager allowedPageSizes={pageSizes} showPageSizeSelector={true} /> */}\r\n                    <Paging defaultPageSize={10} />\r\n                    <Paging\r\n\r\n                        pageIndex={pageCurrent}\r\n                        pageSize={pageSize}\r\n                    />\r\n                    <Scrolling mode=\"virtual\" />\r\n                    <Scrolling rowRenderingMode='virtual' />\r\n\r\n                </DataGrid>\r\n                <PagingInfo\r\n                    className={classes.PagingInfo}\r\n                    fullWidth={true}\r\n                    listItemsPerPage={[\r\n                        10,\r\n                        20,\r\n                        40,\r\n                        50\r\n                    ]}\r\n                    onChangePage={(value) => setPageCurrent(value - 1)}\r\n                    totalItems={props.listTarget.length}\r\n                    onChangeItemsPerPage={(value) => setPageSize(value)} />\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <Form\r\n            popupForm={popupForm}\r\n            closePopup={closePopup}\r\n            submitForm={props.submitForm}\r\n            addPlan={props.addPlan}\r\n            updatePlan={props.updatePlan}\r\n            //get listPlans\r\n            listPlans={listTarget}\r\n            /// gui detail qua\r\n            detail={detail}\r\n        />\r\n        <DialogDelete  closePopup={closePopup} popupDelete={popupDelete} deleteTarget={props.deleteTarget} />\r\n        {alertActive ? <Alert notify={notify}/> : \"\" } \r\n        \r\n    </div>\r\n\r\n}\r\n\r\n///connect redux\r\n//get State\r\nconst mapStateToProps = state => ({\r\n    listTarget: state.goalPlan,\r\n    loading: state.loading,\r\n    //state alert\r\n    alertActive: state.alert\r\n\r\n});\r\n//DISPATCH\r\nconst mapDispatchToProps = {\r\n    //request data\r\n    getDatasRequest: actions.getDatasRequest,\r\n    //Delete\r\n    deleteTarget: (id) => actions.deleteTarget(id),\r\n    //addPlan\r\n    addPlan: (newPlan) => actions.addPlan(newPlan),\r\n    //update \r\n    updatePlan: (index,newPlan) => actions.updatePlan(index,newPlan),\r\n\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);\r\n","import * as types from \"../constant\"\r\nexport const pageSize = (quantity) =>\r\n{\r\n    return {\r\n        type: types.ITEM_IN_PAGE,\r\n        quantity\r\n    }\r\n}\r\nexport const currentPage = (index) =>\r\n{\r\n    return {\r\n        type: types.CURRENT_PAGE,\r\n        index\r\n    }\r\n}\r\n//data\r\n//request\r\nexport const getDatasRequest = () =>\r\n{\r\n    return {\r\n        type: types.GET_DATA_REQUEST,\r\n    }\r\n}\r\n//target\r\nexport const loadDataTarget = () =>\r\n{\r\n    return {\r\n        type: types.LOAD_DATA_TARGET,\r\n    }\r\n}\r\n//delete target\r\nexport const deleteTarget = (id) =>\r\n{\r\n    return {\r\n        type: types.DELETE_ITEM_TARGET,\r\n        id\r\n    }\r\n}\r\n//add plan\r\nexport const addPlan = (newPlan) =>\r\n{\r\n    return {\r\n        type: types.ADD_PLAN,\r\n        newPlan,\r\n    }\r\n}\r\n//upodate\r\nexport const updatePlan = (index,newPlan) =>\r\n{\r\n    return {\r\n        type: types.UPDATE_PLAN,\r\n        newPlan,\r\n        index\r\n    }\r\n}","//page\r\nexport const ITEM_IN_PAGE = \"ITEM_IN_PAGE\"\r\nexport const CURRENT_PAGE = \"CURRENT_PAGE\"\r\n    //plan\r\nexport const LOAD_DATA_TARGET = \"LOAD_DATA_TARGET\"\r\nexport const DELETE_ITEM_TARGET = \"DELETE_ITEM_TARGET\"\r\nexport const ADD_PLAN = \"ADD_PLAN\"\r\nexport const UPDATE_PLAN = \"UPDATE_PLAN\"\r\nexport const GET_DATA_REQUEST = \"GET_DATA_REQUEST\"\r\n\r\n///\r\nexport const ALERT_SUCCESS = \"ALERT_SUCCESS\"\r\n\r\n","import randomId from \"./randomId\";\r\nconst loadData = () => {\r\n  const dataNew = [];\r\n  Array(50)\r\n    .fill(0)\r\n    .forEach((element, index) => {\r\n      dataNew.push({\r\n        GoalPlanID: randomId(),\r\n        GoalPlanName: \"Tên mục tiêu \" + index,\r\n        DateFrom: \"06/15/2021\",\r\n        DateTo: \"06/20/2021\",\r\n        Description: \"Đây là mô tả bảng mục tiêu này\",\r\n        Priority: index % 2 === 0 ? 2 : 1,\r\n        IsPermissionEditProportion: 1,\r\n        IsPermissionCancel: 1,\r\n        IsReview: 1,\r\n        EvaluationExpireDate: \"01/01/2020 \",\r\n        NumEvaluationLevel: 1,\r\n        IsCopyResult: 1,\r\n        LabelLevel1: \"Level1\",\r\n        LabelLevel2: \"Level2\",\r\n        LabelLevel3: \"Level3\",\r\n        IsApproved: 1,\r\n        ApprovalBeginDate: \"01/01/2020\"\r\n      });\r\n    });\r\n  return dataNew;\r\n};\r\nexport default loadData;\r\n","import data from \"../data\"\r\nconst initialState = [];\r\nvar myReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"LOAD_DATA_TARGET\":\r\n                //  localStorage.clear();\r\n            if (localStorage && localStorage.getItem(\"plan\")) {\r\n                return JSON.parse(localStorage.getItem(\"plan\"))\r\n            } else {\r\n                localStorage.setItem(\"plan\", JSON.stringify(data()));\r\n                return JSON.parse(localStorage.getItem(\"plan\"))\r\n            }\r\n        case \"DELETE_ITEM_TARGET\":\r\n            const deletedPlan = state.filter(item => item.GoalPlanID !== action.id);\r\n            localStorage.setItem(\"plan\", JSON.stringify(deletedPlan));\r\n            return deletedPlan;\r\n        case \"ADD_PLAN\":\r\n            const addPlan=state.push(action.newPlan);\r\n            localStorage.setItem(\"plan\", JSON.stringify(state));\r\n            return addPlan;\r\n        case \"UPDATE_PLAN\":\r\n             const updatePlan=state;\r\n              updatePlan[action.index]=action.newPlan;\r\n             localStorage.setItem(\"plan\", JSON.stringify(updatePlan));\r\n             return  updatePlan;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default myReducer;","const initialState = false;\r\nvar myReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"SHOW_LOADING\":\r\n           return true;\r\n        case \"HIDE_LOADING\":\r\n           return false;\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport default myReducer;","const initialState = false;\r\nvar myReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"ALERT_SUCCESS\":\r\n           return true;\r\n        case \"HIDE_ALERT\":\r\n            return false;\r\n      default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport default myReducer;","\r\nimport goalPlan from \"./goalPlan\";\r\nimport loading from \"./loading\"\r\nimport alert from \"./alert\";\r\n\r\nimport {\r\n    combineReducers\r\n} from \"redux\";\r\n\r\n\r\nconst myReducer = combineReducers({\r\n    goalPlan,\r\n    loading,\r\n    alert\r\n})\r\nexport default myReducer;","import\r\n  {\r\n    delay,\r\n    take,\r\n    takeEvery,\r\n    call,\r\n    put\r\n  } from \"redux-saga/effects\";\r\n\r\nexport default function* rootSaga()\r\n{\r\n  console.log(\"Request Data\")\r\n  while(true){\r\n    yield take('GET_DATA_REQUEST');\r\n    yield call(loadData);\r\n    yield takeEvery('ADD_PLAN',CRUD);\r\n    yield takeEvery('DELETE_ITEM_TARGET',CRUD);\r\n    yield takeEvery('UPDATE_PLAN',CRUD);\r\n  }\r\n  \r\n}\r\nfunction* loadData()\r\n{\r\n  yield put({\r\n    type: \"SHOW_LOADING\"\r\n  })\r\n  yield delay(2000);\r\n  yield put({\r\n    type: \"LOAD_DATA_TARGET\"\r\n  })\r\n  yield put({\r\n    type: \"HIDE_LOADING\"\r\n  })\r\n  console.log(\"đã cập nhật dữ liệu\");\r\n}\r\nfunction* CRUD()\r\n{\r\n  yield call(loadData);\r\n  console.log(\"alaoalo\")\r\n  yield put({\r\n    type: \"ALERT_SUCCESS\"\r\n  })\r\n  yield delay(1000);\r\n  yield put({\r\n    type: \"HIDE_ALERT\"\r\n  })\r\n}\r\n\r\n","import 'devextreme/dist/css/dx.common.css';\nimport 'devextreme/dist/css/dx.light.css';\nimport './App.css';\nimport Index from \"./component/Main/index\"\nimport { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { Provider } from \"react-redux\";\nimport reducer from \"./reducers/index\";\nimport rootSaga from \"./sagas\";\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducer, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootSaga);\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Index />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}